version: '3.8'

services:
  control-service:
    image: control-service/latest
#    build:
#      context: .
#      dockerfile: control-service/Dockerfile
    ports:
      - "8199:8199"
    environment:
      - app.equipment.url=equipment-service:8190/equipment-service
      - app.location.url=location-service:8191/location-service
  postgres-equp:
    image: postgres:15.1
    restart: always
    ports:
      - "5432:5432"
    environment:
      LANG: en_US.UTF-8
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: equpdb
    volumes:
      - ./postgres-equp/db:/var/lib/postgresql/data
  equipment-service:
    image: equipment-service/latest
    environment:
      - JAVA_TOOL_OPTIONS=-Xmx500M -Dspring.profiles.active=test
      - TZ=Europe/Moscow
      - server.port=8190
      - spring.datasource.url=jdbc:postgresql://postgres-equp:5432/equpdb?currentSchema=equipments
      - spring.datasource.username=postgres
      - spring.datasource.password=admin
    ports:
      - "8190:8190"
  postgres-loc:
      image: postgres:15.1
      restart: always
      environment:
        LANG: en_US.UTF-8
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: admin
        POSTGRES_DB: equpdb
      volumes:
        - ./postgres-loc/db:/var/lib/postgresql/data
  location-service:
      image: location-service/latest
      environment:
        - JAVA_TOOL_OPTIONS=-Xmx500M -Dspring.profiles.active=test
        - TZ=Europe/Moscow
        - server.port=8191
        - spring.datasource.url=jdbc:postgresql://postgres-loc:5432/locationdb?currentSchema=location
        - spring.datasource.username=postgres
        - spring.datasource.password=admin
      ports:
        - "8191:8191"



